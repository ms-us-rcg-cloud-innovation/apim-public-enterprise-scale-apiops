#####################################################################################################
# NOTE: The publisher keys off of environment variablesto change the behavior of the publish process.
#       * CONFIGURATION_YAML_PATH - if exists, will use config file to select APIs to extract
#
#       More details here; https://github.com/Azure/apiops/wiki/Configuration#configuration-providers
#####################################################################################################

name: APIM - Extract APIs and Artifacts

on:
  workflow_call:
    #NOTE: workflow_call doesn't support choice inputs, have to constrain in calling workflow
    inputs:
      environment:
        description: 'environment to extract from'
        required: true
        type: string
        default: 'dev'
      USE_CONFIG_FILE: 
        description: 'Use Config File to Choose APIs to Extract'
        required: false
        type: boolean
        default: false
      API_SPECIFICATION_FORMAT:
        description: 'API Specification Format'
        required: true
        type: string
        default: 'OpenAPIV3Yaml'

  workflow_dispatch:
    inputs:
      environment: 
        description: 'environment to extract from'
        required: true
        type: environment
      CONFIGURATION_YAML_PATH:
        description: 'Choose Wether to extract all Apis or extract apis listed an extraction configuration file'     
        required: true
        type: choice
        options:
        - Extract All APIs
        - apisTeam1.yaml
        - apisTeam2.yaml
      API_SPECIFICATION_FORMAT:
        description: 'API Specification Format'     
        required: true
        type: choice
        options:
        - OpenAPIV3Yaml 
        - OpenAPIV3Json
        - OpenAPIV2Yaml
        - OpenAPIV2Json

permissions:
  id-token: write
  contents: write
  pull-requests: write

env:
  apiops_release_version: v4.1.2
  RUNNER_DEBUG: 1

jobs:
  APIM-extract-apis:
    runs-on: ubuntu-latest
    environment: ${{inputs.environment}}
    #if: ${{ inputs.environment != 'dev'}}  #### Don't want to inadvertantly deploy back to dev as it is our starting point, but may want to override in future ###
    env:
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      AZURE_RESOURCE_GROUP_NAME: ${{ vars.AZURE_RESOURCE_GROUP_NAME }}
      API_MANAGEMENT_SERVICE_NAME: ${{ vars.API_MANAGEMENT_SERVICE_NAME }}
      API_MANAGEMENT_SERVICE_OUTPUT_FOLDER_PATH: ${{ GITHUB.WORKSPACE }}/src/APIM  # change this to the artifacts folder
      API_SPECIFICATION_FORMAT: ${{inputs.API_SPECIFICATION_FORMAT}} 
      
    steps:
      #############################################################################################
      #NOTE: The extractor is looking for the existance of this environment variable to determine #
      #      if it is going to extract a set of APIs as opposed to all the APIS.  If we are       #
      #      going to extract all APIs, we simply don't create that environment variable.         #
      #      This is where you add the absolute path to the configuration file.                   #
      #############################################################################################
      - name: Run extractor without Config Yaml
        if: ${{ github.event.inputs.CONFIGURATION_YAML_PATH == 'Extract All APIs' }}
        env:
          AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          AZURE_RESOURCE_GROUP_NAME: ${{ secrets.AZURE_RESOURCE_GROUP_NAME }}
          API_MANAGEMENT_SERVICE_NAME: ${{ secrets.API_MANAGEMENT_SERVICE_NAME }}
          API_MANAGEMENT_SERVICE_OUTPUT_FOLDER_PATH: ${{ GITHUB.WORKSPACE }}/apimartifacts  # change this to the artifacts folder
          API_SPECIFICATION_FORMAT: ${{ github.event.inputs.API_SPECIFICATION_FORMAT }} 
        run: |
          Set-StrictMode -Version Latest
          $ErrorActionPreference = "Stop"
          $VerbosePreference = "Continue"
          $InformationPreference = "Continue"

          Write-Information "Downloading extractor..."
          $extractorFileName = "extractor.linux-x64"
          $extractorFinalFileName = "extractor"
          if ("${{ runner.os }}" -like "*win*") {
            $extractorFileName = "extractor.win-x64.exe"
            $extractorFinalFileName = "extractor.exe"
          }
          elseif ("${{ runner.os }}" -like "*mac*" -and "${{ runner.arch }}" -like "*arm*") {
            $extractorFileName = "extractor.osx-arm64"
          }
          elseif ("${{ runner.os }}" -like "*mac*" -and "${{ runner.arch }}" -like "*x86_64*") {
            $extractorFileName = "extractor.osx-x64"
          }
          
          $uri = "https://github.com/Azure/apiops/releases/download/${{ env.apiops_release_version }}/$extractorFileName"
          $destinationFilePath = Join-Path "${{ runner.temp }}" $extractorFinalFileName
          Invoke-WebRequest -Uri "$uri" -OutFile "$destinationFilePath"

          if ("${{ runner.os }}" -like "*linux*")
          {
            Write-Information "Setting file permissions..."
            & chmod +x "$destinationFilePath"
            if ($LASTEXITCODE -ne 0) { throw "Setting file permissions failed."}
          }

          & "$destinationFilePath"              
          if ($LASTEXITCODE -ne 0) { throw "Running extractor failed."}

          Write-Information "Execution complete."
        shell: pwsh
      
      - name: publish artifact
        uses: actions/upload-artifact@v2
        with:
          name: artifacts-from-portal
          path: ${{ GITHUB.WORKSPACE }}/${{ env.API_MANAGEMENT_SERVICE_OUTPUT_FOLDER_PATH }}    
          
      - name: Create artifacts pull request
        uses: peter-evans/create-pull-request@v5     
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "updated extract from apim instance ${{ env.API_MANAGEMENT_SERVICE_OUTPUT_FOLDER_PATH }}"
          title: "${{ env.API_MANAGEMENT_SERVICE_OUTPUT_FOLDER_PATH }} - extract"
          body: >
            This PR is auto-generated by Github actions workflow
          labels: extract, automated pr    
