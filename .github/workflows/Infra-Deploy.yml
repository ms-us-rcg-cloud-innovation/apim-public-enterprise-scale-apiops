name: Infra - Deploy

on:
  workflow_dispatch:
    inputs:
      environment:
        type: environment
        description: 'environment to run on'
        required: true
        default: 'development'

  workflow_call:
    inputs:
      environment:
        required: true
        type: string

permissions:
      id-token: write
      contents: read

jobs:
  deployInfra:
    name: 'deploy infrastructure'
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
    - name: Checkout
      uses: actions/checkout@v1

    - name: 'Az CLI login'
      uses: azure/login@v1
      with:
          creds: '{"clientId":"${{ secrets.AZURE_CLIENT_ID }}","clientSecret":"${{ secrets.AZURE_CLIENT_SECRET }}","subscriptionId":"${{ secrets.AZURE_SUBSCRIPTION_ID }}","tenantId":"${{ secrets.AZURE_TENANT_ID }}"}'
          enable-AzPSSession: true
        
    - run: |
        Write-Host "parameters: environment=${{inputs.environment}} location=${{vars.AZURE_REGION}}"
        Write-Host "github refs: ${{GITHUB.REF}}.${{GITHUB.SHA}}  "
        Write-Host "region: ${{vars.AZURE_REGION}} "
        Write-Host "environment is: ${{ inputs.environment }} / ${{ inputs.environment }}"
      shell: pwsh

    - name: Deploy Azure Resource Manager (ARM) Template
      uses: Azure/arm-deploy@v1.0.9
      id: deploy
      with:
        scope: subscription
        subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        template: ./infrastructure/main.bicep
        deploymentMode: Incremental 
        deploymentName: githubsha${{GITHUB.SHA}}                                   
        region: ${{vars.AZURE_REGION}}                                                            # Want this driven from an environment variable
        parameters: 'environment=${{inputs.environment}} location=${{vars.AZURE_REGION}}'  # Can also specify a parameters file location.  Want these driven from environment variables
        failOnStdErr: false

    #Will need to update environment variables with this info
    - run: |
        Write-Host "AZURE_RESOURCE_GROUP_NAME: ${{ steps.deploy.outputs.AZURE_RESOURCE_GROUP_NAME }}"
        Write-Host "API_MANAGEMENT_SERVICE_NAME: ${{ steps.deploy.outputs.API_MANAGEMENT_SERVICE_NAME}}"
        Write-Host "FUNCTION_SERVICE_NAME: ${{ steps.deploy.outputs.FUNCTION_SERVICE_NAME }}"
      shell: pwsh

    # This is how you update an environment level variable
    # Note: the number after repositories is the repository id.  You get this via "gh api /repos/karlrissland/logic-app-standard-deployment"
    - run: |
        gh api --method PATCH  /repositories/${{vars.GH_REPO_ID}}/environments/${{ inputs.environment }}/variables/AZURE_RESOURCE_GROUP_NAME -f name='AZURE_RESOURCE_GROUP_NAME' -f value=${{ steps.deploy.outputs.AZURE_RESOURCE_GROUP_NAME }}
        gh api --method PATCH  /repositories/${{vars.GH_REPO_ID}}/environments/${{ inputs.environment }}/variables/API_MANAGEMENT_SERVICE_NAME -f name='API_MANAGEMENT_SERVICE_NAME' -f value=${{ steps.deploy.outputs.API_MANAGEMENT_SERVICE_NAME }}
        gh api --method PATCH  /repositories/${{vars.GH_REPO_ID}}/environments/${{ inputs.environment }}/variables/FUNCTION_SERVICE_NAME -f name='FUNCTION_SERVICE_NAME' -f value=${{ steps.deploy.outputs.FUNCTION_SERVICE_NAME}}
      env:
        GH_TOKEN: ${{ secrets.GH_PAT }}  
