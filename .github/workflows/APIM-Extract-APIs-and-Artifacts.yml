name: APIM - Extract APIs and Artifacts

on:
  workflow_call:
    inputs:
      environment:
        description: 'environment to extract from'
        required: true
        type: string
        default: 'dev'
      USE_CONFIG_FILE:
        description: 'Use Config File to Choose APIs to Extract'
        required: false
        type: boolean
        default: false
      API_SPECIFICATION_FORMAT:
        description: 'API Specification Format'
        required: true
        type: string
        default: 'OpenAPIV3Yaml'

  workflow_dispatch:
    inputs:
      environment:
        description: 'environment to extract from'
        required: true
        type: environment
      CONFIGURATION_YAML_PATH:
        description: 'Choose Whether to extract all APIs or extract APIs listed in an extraction configuration file'
        required: true
        type: choice
        options:
          - Extract All APIs
          - apisTeam1
          - apisTeam2
      API_SPECIFICATION_FORMAT:
        description: 'API Specification Format'
        required: true
        type: choice
        options:
          - OpenAPIV3Yaml
          - OpenAPIV3Json
          - OpenAPIV2Yaml
          - OpenAPIV2Json

permissions:
  id-token: write
  contents: write
  pull-requests: write

env:
  apiops_release_version: v4.1.2
  RUNNER_DEBUG: 1

jobs:
  APIM-extract-apis-without-config:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    if: ${{ github.event.inputs.CONFIGURATION_YAML_PATH == 'Extract All APIs' }}
    env:
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      AZURE_RESOURCE_GROUP_NAME: ${{ vars.AZURE_RESOURCE_GROUP_NAME }}
      API_MANAGEMENT_SERVICE_NAME: ${{ vars.API_MANAGEMENT_SERVICE_NAME }}
      API_MANAGEMENT_SERVICE_OUTPUT_FOLDER_PATH: ${{ GITHUB.WORKSPACE }}/src/APIM
      API_SPECIFICATION_FORMAT: ${{ inputs.API_SPECIFICATION_FORMAT }}
      
    steps:
      - run: |
          Write-Host "Environment: ${{ inputs.environment }}"
          Write-Host "CONFIGURATION_YAML_PATH: ${{ env.CONFIGURATION_YAML_PATH }}"
          Write-Host "API_SPECIFICATION_FORMAT: ${{ env.API_SPECIFICATION_FORMAT }}"
          Write-Host "API_MANAGEMENT_SERVICE_NAME: ${{ env.API_MANAGEMENT_SERVICE_NAME }}"
          Write-Host "AZURE_RESOURCE_GROUP_NAME: ${{ env.AZURE_RESOURCE_GROUP_NAME }}"
          Write-Host "API_MANAGEMENT_SERVICE_OUTPUT_FOLDER_PATH: ${{ env.API_MANAGEMENT_SERVICE_OUTPUT_FOLDER_PATH }}"
        shell: pwsh
        
      - uses: actions/checkout@v3
          
      - name: Run extractor
        run: |
          Set-StrictMode -Version Latest
          $ErrorActionPreference = "Stop"
          $VerbosePreference = "Continue"
          $InformationPreference = "Continue"

          Write-Information "Downloading extractor..."
          $extractorFileName = "${{ runner.os }}" -like "*win*" ? "extractor.win-x64.exe" : "extractor.linux-x64.exe"
          $uri = "https://github.com/Azure/apiops/releases/download/${{ env.apiops_release_version }}/$extractorFileName"
          $destinationFilePath = Join-Path "${{ runner.temp }}" "extractor.exe"
          Invoke-WebRequest -Uri "$uri" -OutFile "$destinationFilePath"
          Write-Information "DestinationFilePath: $destinationFilePath"
          Write-Information "Extractor downloaded..."
          
          if ("${{ runner.os }}" -like "*linux*")
          {
            Write-Information "Setting file permissions..."
            & chmod +x "$destinationFilePath"
            if ($LASTEXITCODE -ne 0) { throw "Setting file permissions failed."}
            Write-Information "Setting file permissions complete..."
          }

          & "$destinationFilePath"              
          if ($LASTEXITCODE -ne 0) { throw "Running extractor failed."}

          Write-Information "Execution complete."
        shell: pwsh
      
      - name: publish artifact
        uses: actions/upload-artifact@v2
        with:
          name: artifacts-from-portal
          path: ${{ GITHUB.WORKSPACE }}/${{ env.API_MANAGEMENT_SERVICE_OUTPUT_FOLDER_PATH }}    
          
      - name: Create artifacts pull request
        uses: peter-evans/create-pull-request@v5     
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "updated extract from apim instance ${{ env.API_MANAGEMENT_SERVICE_OUTPUT_FOLDER_PATH }}"
          branch: ${{ github.event.inputs.CONFIGURATION_YAML_PATH }}
          title: "${{ env.API_MANAGEMENT_SERVICE_OUTPUT_FOLDER_PATH }} - extract"
          body: >
            This PR is auto-generated by Github actions workflow
          labels: extract, automated pr

  APIM-extract-apis-with-config:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    if: ${{ github.event.inputs.CONFIGURATION_YAML_PATH != 'Extract All APIs' }}
    env:
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      AZURE_RESOURCE_GROUP_NAME: ${{ vars.AZURE_RESOURCE_GROUP_NAME }}
      API_MANAGEMENT_SERVICE_NAME: ${{ vars.API_MANAGEMENT_SERVICE_NAME }}
      API_MANAGEMENT_SERVICE_OUTPUT_FOLDER_PATH: ${{ GITHUB.WORKSPACE }}/src/APIM
      API_SPECIFICATION_FORMAT: ${{ inputs.API_SPECIFICATION_FORMAT }}
      CONFIGURATION_YAML_PATH: ${{ GITHUB.WORKSPACE }}/src/${{ github.event.inputs.CONFIGURATION_YAML_PATH }}.yaml
      BRANCH_NAME: ${{ github.event.inputs.CONFIGURATION_YAML_PATH }}
      
    steps:
      - run: |
          Write-Host "Environment: ${{ inputs.environment }}"
          Write-Host "CONFIGURATION_YAML_PATH: ${{ env.CONFIGURATION_YAML_PATH }}"
          Write-Host "API_SPECIFICATION_FORMAT: ${{ env.API_SPECIFICATION_FORMAT }}"
          Write-Host "API_MANAGEMENT_SERVICE_NAME: ${{ env.API_MANAGEMENT_SERVICE_NAME }}"
          Write-Host "AZURE_RESOURCE_GROUP_NAME: ${{ env.AZURE_RESOURCE_GROUP_NAME }}"
          Write-Host "API_MANAGEMENT_SERVICE_OUTPUT_FOLDER_PATH: ${{ env.API_MANAGEMENT_SERVICE_OUTPUT_FOLDER_PATH }}"
        shell: pwsh
        
      - uses: actions/checkout@v3
          
      - name: Run extractor
        run: |
          Set-StrictMode -Version Latest
          $ErrorActionPreference = "Stop"
          $VerbosePreference = "Continue"
          $InformationPreference = "Continue"

          Write-Information "Downloading extractor..."
          $extractorFileName = "${{ runner.os }}" -like "*win*" ? "extractor.win-x64.exe" : "extractor.linux-x64.exe"
          $uri = "https://github.com/Azure/apiops/releases/download/${{ env.apiops_release_version }}/$extractorFileName"
          $destinationFilePath = Join-Path "${{ runner.temp }}" "extractor.exe"
          Invoke-WebRequest -Uri "$uri" -OutFile "$destinationFilePath"
          Write-Information "DestinationFilePath: $destinationFilePath"
          Write-Information "Extractor downloaded..."
          
          if ("${{ runner.os }}" -like "*linux*")
          {
            Write-Information "Setting file permissions..."
            & chmod +x "$destinationFilePath"
            if ($LASTEXITCODE -ne 0) { throw "Setting file permissions failed."}
            Write-Information "Setting file permissions complete..."
          }

          & "$destinationFilePath"              
          if ($LASTEXITCODE -ne 0) { throw "Running extractor failed."}

          Write-Information "Execution complete."
        shell: pwsh
      
      - name: publish artifact
        uses: actions/upload-artifact@v2
        with:
          name: artifacts-from-portal
          path: ${{ GITHUB.WORKSPACE }}/${{ env.API_MANAGEMENT_SERVICE_OUTPUT_FOLDER_PATH }}    
          
      - name: Create artifacts pull request
        uses: peter-evans/create-pull-request@v5     
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "updated extract from apim instance ${{ env.API_MANAGEMENT_SERVICE_OUTPUT_FOLDER_PATH }}"
          branch: ${{ env.BRANCH_NAME }}
          title: "${{ env.API_MANAGEMENT_SERVICE_OUTPUT_FOLDER_PATH }} - extract"
          body: >
            This PR is auto-generated by Github actions workflow
          labels: extract, automated pr
