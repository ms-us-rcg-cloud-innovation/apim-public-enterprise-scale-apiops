#####################################################################################################
# NOTE: The publisher keys off of environment variables to change the behavior of the publish process.
#       * CONFIGURATION_YAML_PATH - if exists, will use config file to select APIs to extract
#
#       More details here; https://github.com/Azure/apiops/wiki/Configuration#configuration-providers
#####################################################################################################

name: APIM - Extract APIs and Artifacts

on:
  workflow_call:
    inputs:
      environment:
        description: 'environment to extract from'
        required: true
        type: string
        default: 'dev'
      USE_CONFIG_FILE: 
        description: 'Use Config File to Choose APIs to Extract'
        required: false
        type: boolean
        default: false
      API_SPECIFICATION_FORMAT:
        description: 'API Specification Format'
        required: true
        type: string
        default: 'OpenAPIV3Yaml'

  workflow_dispatch:
    inputs:
      environment: 
        description: 'environment to extract from'
        required: true
        type: string
      USE_CONFIG_FILE:
        description: 'Use Config File to Choose APIs to Extract'
        required: false
        type: boolean
        default: false
      CONFIGURATION_YAML:
        description: 'Select Config File'
        required: false
        type: choice
        options:
          - 'apisTeam1'
          - 'apisTeam2'
      API_SPECIFICATION_FORMAT:
        description: 'API Specification Format'     
        required: true
        type: choice
        options:
          - OpenAPIV3Yaml 
          - OpenAPIV3Json
          - OpenAPIV2Yaml
          - OpenAPIV2Json

permissions:
  id-token: write
  contents: write
  pull-requests: write

env:
  apiops_release_version: v4.1.2
  RUNNER_DEBUG: 1

jobs:
  APIM-extract-apis:
    runs-on: ubuntu-latest
    environment: ${{inputs.environment}}
    env:
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      AZURE_RESOURCE_GROUP_NAME: ${{ vars.AZURE_RESOURCE_GROUP_NAME }}
      API_MANAGEMENT_SERVICE_NAME: ${{ vars.API_MANAGEMENT_SERVICE_NAME }}
      API_MANAGEMENT_SERVICE_OUTPUT_FOLDER_PATH: ${{ GITHUB.WORKSPACE }}/src/APIM
      API_SPECIFICATION_FORMAT: ${{inputs.API_SPECIFICATION_FORMAT}} 

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set CONFIGURATION_YAML_PATH
        shell: pwsh
        run: |
          echo "USE_CONFIG_FILE=${{ github.event.inputs.USE_CONFIG_FILE }}" >> $env:GITHUB_ENV
          if (${{ github.event.inputs.USE_CONFIG_FILE }} -eq $true) {
            if ([string]::IsNullOrEmpty("${{ github.event.inputs.CONFIGURATION_YAML }}")) {
              Write-Error "Error: CONFIGURATION_YAML must be provided when USE_CONFIG_FILE is selected."
              exit 1
            } else {
              if ("${{ github.event.inputs.CONFIGURATION_YAML }}" -eq "apisTeam1") {
                echo "CONFIGURATION_YAML_PATH=${{ github.workspace }}/src/apisTeam1.yaml" >> $env:GITHUB_ENV
              } elseif ("${{ github.event.inputs.CONFIGURATION_YAML }}" -eq "apisTeam2") {
                echo "CONFIGURATION_YAML_PATH=${{ github.workspace }}/src/apisTeam2.yaml" >> $env:GITHUB_ENV
              }
              echo "CONFIGURATION_YAML_PATH set to: $env:CONFIGURATION_YAML_PATH"
            }
          } else {
            echo "CONFIG_FILE_NAME=not_selected" >> $env:GITHUB_ENV
            echo "CONFIGURATION_YAML_PATH=not_applicable" >> $env:GITHUB_ENV
          }


      - name: No Config File
        if: env.USE_CONFIG_FILE == 'false'
        run: echo "Not using any config file"

    
      - run: |
          Write-Host "Environment: ${{inputs.environment}}"
          Write-Host "CONFIGURATION_YAML_PATH: ${{env.CONFIGURATION_YAML_PATH}}"
          Write-Host "API_SPECIFICATION_FORMAT: ${{env.API_SPECIFICATION_FORMAT}}"
          Write-Host "API_MANAGEMENT_SERVICE_NAME: ${{env.API_MANAGEMENT_SERVICE_NAME}}"
          Write-Host "AZURE_RESOURCE_GROUP_NAME: ${{env.AZURE_RESOURCE_GROUP_NAME}}"
          Write-Host "API_MANAGEMENT_SERVICE_OUTPUT_FOLDER_PATH: ${{env.API_MANAGEMENT_SERVICE_OUTPUT_FOLDER_PATH}}"
        shell: pwsh
        
      - uses: actions/checkout@v3
          
      - name: Run extractor
        run: |
          Set-StrictMode -Version Latest
          $ErrorActionPreference = "Stop"
          $VerbosePreference = "Continue"
          $InformationPreference = "Continue"

          Write-Information "Downloading extractor..."
          $extractorFileName = "${{ runner.os }}" -like "*win*" ? "extractor.win-x64.exe" : "extractor.linux-x64.exe"
          $uri = "https://github.com/Azure/apiops/releases/download/${{ env.apiops_release_version }}/$extractorFileName"
          $destinationFilePath = Join-Path "${{ runner.temp }}" "extractor.exe"
          Invoke-WebRequest -Uri "$uri" -OutFile "$destinationFilePath"
          Write-Information "DestinationFilePath: $destinationFilePath"
          Write-Information "Extractor downloaded..."
          
          if ("${{ runner.os }}" -like "*linux*")
          {
            Write-Information "Setting file permissions..."
            & chmod +x "$destinationFilePath"
            if ($LASTEXITCODE -ne 0) { throw "Setting file permissions failed."}
            Write-Information "Setting file permissions complete..."
          }

          & "$destinationFilePath"              
          if ($LASTEXITCODE -ne 0) { throw "Running extractor failed."}

          Write-Information "Execution complete."
        shell: pwsh
      
      - name: publish artifact
        uses: actions/upload-artifact@v2
        with:
          name: artifacts-from-portal
          path: ${{ GITHUB.WORKSPACE }}/${{ env.API_MANAGEMENT_SERVICE_OUTPUT_FOLDER_PATH }}    
          
      - name: Create artifacts pull request
        uses: peter-evans/create-pull-request@v5     
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "updated extract from apim instance ${{ env.API_MANAGEMENT_SERVICE_OUTPUT_FOLDER_PATH }}"
          title: "${{ env.API_MANAGEMENT_SERVICE_OUTPUT_FOLDER_PATH }} - extract"
          body: >
            This PR is auto-generated by Github actions workflow
          labels: extract, automated pr    
