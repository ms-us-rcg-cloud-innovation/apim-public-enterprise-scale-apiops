#####################################################################################################
# NOTE: The publisher keys off of environment variablesto change the behavior of the publish process.
#       * CONFIGURATION_YAML_PATH - if exists, will use config file to override settings on publish
#       * COMMIT_ID - if exists, will only publish changes that occurred in this commit(not implemented)
#
#       More details here; https://github.com/Azure/apiops/wiki/Configuration#configuration-providers
#####################################################################################################

name: APIM - Publish APIs and Artifacts

on:
  workflow_call:
    #NOTE: workflow_call doesn't support choice inputs, have to constrain in calling workflow
    inputs:
      environment:
        description: 'environment to publish to'
        required: true
        type: string
        default: 'dev'
      USE_CONFIG_FILE:
        description: 'whether or not to use a config file to override settings'
        required: false
        type: boolean
        default: false
     # DEPLOY_COMMIT_ONLY:
     #   description: 'deploy only changes from commit'
     #   required: false
     #   type: boolean
     #   default: false

  workflow_dispatch:
    inputs:
      environment: 
        description: 'environment to publish to'
        required: true
        type: environment
      USE_CONFIG_FILE:
        description: 'whether or not to use a config file to override settings'
        required: false
        type: boolean
        default: false
      #DEPLOY_COMMIT_ONLY:
      #  description: 'deploy only changes from commit'
      #  required: false
      #  type: boolean
      #  default: false

permissions:
  id-token: write
  contents: write
  pull-requests: write

env:
  apiops_release_version: v4.1.2
  RUNNER_DEBUG: 1

jobs:
  # This workflow contains a single job called "build"
  APIM-Import-APIs:
    runs-on: ubuntu-latest
    environment: ${{inputs.environment}}
    
    env:
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      AZURE_RESOURCE_GROUP_NAME: ${{ vars.AZURE_RESOURCE_GROUP_NAME }}
      API_MANAGEMENT_SERVICE_NAME: ${{ vars.API_MANAGEMENT_SERVICE_NAME }}
      API_MANAGEMENT_SERVICE_OUTPUT_FOLDER_PATH: ${{ GITHUB.WORKSPACE }}/src/APIM  ## location of API assets
      TESTSECRETVALUE: ${{ secrets.TESTSECRETVALUE }}
      CONFIGURATION_YAML_PATH: ${{ GITHUB.WORKSPACE }}/src/apim-publish-configuration.yaml ## config file to use if using config file

    steps:
      ###############################################################################################
      #NOTE: The publisher is looking for the existance specific environment variables to determine #
      #      if it is going use a config file or publish just the commit.  We create them if needed.#
      #      This is where you add the absolute path to the config file.                            #
      ###############################################################################################
      - run: |
          if ("${{inputs.USE_CONFIG_FILE}}" -eq "true")
          {
            "CONFIGURATION_YAML_PATH=${{ GITHUB.WORKSPACE }}/src/apim-publish-configuration.yaml" >> $env:GITHUB_ENV
            Write-Host "--Using configuration file"
          }
         # if ("${{inputs.DEPLOY_COMMIT_ONLY}}" -eq "true")
         # {
         #   "COMMIT_ID=${{ github.sha }}" >> $env:GITHUB_ENV
         #   Write-Host "--Using Commit_ID"
         # }
        shell: pwsh
    
      - run: |
          Write-Host "Environment: ${{inputs.environment}}"
          Write-Host "CONFIGURATION_YAML_PATH: ${{env.CONFIGURATION_YAML_PATH}}"
          Write-Host "API_MANAGEMENT_SERVICE_NAME: ${{env.API_MANAGEMENT_SERVICE_NAME}}"
          Write-Host "AZURE_RESOURCE_GROUP_NAME: ${{env.AZURE_RESOURCE_GROUP_NAME}}"
          Write-Host "API_MANAGEMENT_SERVICE_OUTPUT_FOLDER_PATH: ${{env.API_MANAGEMENT_SERVICE_OUTPUT_FOLDER_PATH}}"
          write-Host "COMMIT_ID: ${{env.COMMIT_ID}}"
        shell: pwsh
    
      - uses: actions/checkout@v3
      
      # Using one configuration file for all target environments.
      # Replace tokens with GitHub environment secrets/variables.
      # Only runs if process is using config file
      - name: "Replace Environment Specific Tokens"
        if: (inputs.USE_CONFIG_FILE)
        uses: cschleiden/replace-tokens@v1.1
        with:
          tokenPrefix: "{#"
          tokenSuffix: "#}"
          files: ${{ env.CONFIGURATION_YAML_PATH }}
        env:
          API_MANAGEMENT_SERVICE_NAME: "${{env.API_MANAGEMENT_SERVICE_NAME}}"
      
      - name: Run publisher
        run: |
          Set-StrictMode -Version Latest
          $ErrorActionPreference = "Stop"
          $VerbosePreference = "Continue"
          $InformationPreference = "Continue"

          Write-Information "Downloading publisher..."
          $publisherFileName = "${{ runner.os }}" -like "*win*" ? "publisher.win-x64.exe" : "publisher.linux-x64.exe"
          $uri = "https://github.com/Azure/apiops/releases/download/${{ env.apiops_release_version }}/$publisherFileName"
          $destinationFilePath = Join-Path "${{ runner.temp }}" "publisher.exe"
          Invoke-WebRequest -Uri "$uri" -OutFile "$destinationFilePath"

          if ("${{ runner.os }}" -like "*linux*")
          {
            Write-Information "Setting file permissions..."
            & chmod +x "$destinationFilePath"
            if ($LASTEXITCODE -ne 0) { throw "Setting file permissions failed."}
          }

          & "$destinationFilePath"              
          if ($LASTEXITCODE -ne 0) { throw "Running publisher failed."}

          Write-Information "Execution complete."
        shell: pwsh


